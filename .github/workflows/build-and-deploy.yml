name: Dev Build

on:
  push:
  #pull_request:
    branches:
      - dev
  
jobs:
  prepare: 
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME:
      AWS_REGION:
    steps:

    - name: Hello-world
      run: echo Hello-World.
    
    - name: Get branch name
      id: branch
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "::set-output name=BRANCH_NAME::$(echo ${GITHUB_HEAD_REF} | tr / -)"
        else
          echo "::set-output name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/} | tr / -)"
        fi
    
    outputs:
      BRANCH_NAME: ${{ steps.branch.outputs.BRANCH_NAME }}

  build:
    runs-on: ubuntu-latest
    needs: [ prepare ]
    env:
      BRANCH_NAME: ${{needs.prepare.outputs.BRANCH_NAME}}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: aws-traning-saul-eks-dev/api-hello-world
        IMAGE_TAG: ${{ secrets.MODULE_NAME }}-${{ env.BRANCH_NAME }}-${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Terraform Init
      uses: hashicorp/terraform-github-actions/init@v0.4.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'terraform'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: Terraform init
        # if: env.BRANCH_NAME == 'prod'
        run: |
          terraform init  -backend-config="bucket=mlfabric-sandbox-saul" \
                          -backend-config="region=us-east-1" \
                          -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
                          -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
                          -backend-config="key=aws-traning-saul-eks-dev/api-hello-world.tfstate"